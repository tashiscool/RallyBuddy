//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.07 at 09:26:43 PM EDT 
//


package model.com.rallydev.webservice.v1_34.domain;

import java.math.BigDecimal;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.rallydev.webservice.v1_34.domain package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _RallyIntegrationInfo_QNAME = new QName("http://rallydev.com/webservice/v1_34/domain", "RallyIntegrationInfo");
    private final static QName _TaskEstimate_QNAME = new QName("", "Estimate");
    private final static QName _TaskToDo_QNAME = new QName("", "ToDo");
    private final static QName _TaskRank_QNAME = new QName("", "Rank");
    private final static QName _TaskIteration_QNAME = new QName("", "Iteration");
    private final static QName _TaskRecycled_QNAME = new QName("", "Recycled");
    private final static QName _TaskBlocked_QNAME = new QName("", "Blocked");
    private final static QName _TaskAttachments_QNAME = new QName("", "Attachments");
    private final static QName _TaskActuals_QNAME = new QName("", "Actuals");
    private final static QName _TaskTaskIndex_QNAME = new QName("", "TaskIndex");
    private final static QName _TaskRelease_QNAME = new QName("", "Release");
    private final static QName _TaskState_QNAME = new QName("", "State");
    private final static QName _TaskProject_QNAME = new QName("", "Project");
    private final static QName _TaskWorkProduct_QNAME = new QName("", "WorkProduct");
    private final static QName _TestCaseTestFolder_QNAME = new QName("", "TestFolder");
    private final static QName _TestCasePostConditions_QNAME = new QName("", "PostConditions");
    private final static QName _TestCaseTestCaseActual_QNAME = new QName("", "TestCaseActual");
    private final static QName _TestCaseMethod_QNAME = new QName("", "Method");
    private final static QName _TestCaseType_QNAME = new QName("", "Type");
    private final static QName _TestCaseValidationInput_QNAME = new QName("", "ValidationInput");
    private final static QName _TestCaseLastBuild_QNAME = new QName("", "LastBuild");
    private final static QName _TestCaseLastRun_QNAME = new QName("", "LastRun");
    private final static QName _TestCaseLastVerdict_QNAME = new QName("", "LastVerdict");
    private final static QName _TestCaseIssue_QNAME = new QName("", "Issue");
    private final static QName _TestCasePreConditions_QNAME = new QName("", "PreConditions");
    private final static QName _TestCaseSteps_QNAME = new QName("", "Steps");
    private final static QName _TestCasePackage_QNAME = new QName("", "Package");
    private final static QName _TestCaseTestCaseToDo_QNAME = new QName("", "TestCaseToDo");
    private final static QName _TestCaseValidationExpectedResult_QNAME = new QName("", "ValidationExpectedResult");
    private final static QName _TestCaseStepName_QNAME = new QName("", "StepName");
    private final static QName _TestCasePriority_QNAME = new QName("", "Priority");
    private final static QName _TestCaseDefectStatus_QNAME = new QName("", "DefectStatus");
    private final static QName _TestCaseRisk_QNAME = new QName("", "Risk");
    private final static QName _TestCaseAutomatedScriptLocation_QNAME = new QName("", "AutomatedScriptLocation");
    private final static QName _TestCaseResults_QNAME = new QName("", "Results");
    private final static QName _TestCaseObjective_QNAME = new QName("", "Objective");
    private final static QName _TestCaseTestCaseEstimate_QNAME = new QName("", "TestCaseEstimate");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.rallydev.webservice.v1_34.domain
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link RallyIntegrationInfoType }
     * 
     */
    public RallyIntegrationInfoType createRallyIntegrationInfoType() {
        return new RallyIntegrationInfoType();
    }

    /**
     * Create an instance of {@link User }
     * 
     */
    public User createUser() {
        return new User();
    }

    /**
     * Create an instance of {@link Attachment }
     * 
     */
    public Attachment createAttachment() {
        return new Attachment();
    }

    /**
     * Create an instance of {@link TestFolderTestCasesType }
     * 
     */
    public TestFolderTestCasesType createTestFolderTestCasesType() {
        return new TestFolderTestCasesType();
    }

    /**
     * Create an instance of {@link TestSetTestCasesType }
     * 
     */
    public TestSetTestCasesType createTestSetTestCasesType() {
        return new TestSetTestCasesType();
    }

    /**
     * Create an instance of {@link QueryResultResultsType }
     * 
     */
    public QueryResultResultsType createQueryResultResultsType() {
        return new QueryResultResultsType();
    }

    /**
     * Create an instance of {@link TimeEntryItemValuesType }
     * 
     */
    public TimeEntryItemValuesType createTimeEntryItemValuesType() {
        return new TimeEntryItemValuesType();
    }

    /**
     * Create an instance of {@link RevisionHistory }
     * 
     */
    public RevisionHistory createRevisionHistory() {
        return new RevisionHistory();
    }

    /**
     * Create an instance of {@link TestCaseStep }
     * 
     */
    public TestCaseStep createTestCaseStep() {
        return new TestCaseStep();
    }

    /**
     * Create an instance of {@link AttributeDefinition }
     * 
     */
    public AttributeDefinition createAttributeDefinition() {
        return new AttributeDefinition();
    }

    /**
     * Create an instance of {@link BuildMetric }
     * 
     */
    public BuildMetric createBuildMetric() {
        return new BuildMetric();
    }

    /**
     * Create an instance of {@link AttachmentContent }
     * 
     */
    public AttachmentContent createAttachmentContent() {
        return new AttachmentContent();
    }

    /**
     * Create an instance of {@link TaskAttachmentsType }
     * 
     */
    public TaskAttachmentsType createTaskAttachmentsType() {
        return new TaskAttachmentsType();
    }

    /**
     * Create an instance of {@link Project }
     * 
     */
    public Project createProject() {
        return new Project();
    }

    /**
     * Create an instance of {@link ProjectBuildDefinitionsType }
     * 
     */
    public ProjectBuildDefinitionsType createProjectBuildDefinitionsType() {
        return new ProjectBuildDefinitionsType();
    }

    /**
     * Create an instance of {@link SCMRepositoryProjectsType }
     * 
     */
    public SCMRepositoryProjectsType createSCMRepositoryProjectsType() {
        return new SCMRepositoryProjectsType();
    }

    /**
     * Create an instance of {@link TestCaseResultsType }
     * 
     */
    public TestCaseResultsType createTestCaseResultsType() {
        return new TestCaseResultsType();
    }

    /**
     * Create an instance of {@link Blocker }
     * 
     */
    public Blocker createBlocker() {
        return new Blocker();
    }

    /**
     * Create an instance of {@link ProjectReleasesType }
     * 
     */
    public ProjectReleasesType createProjectReleasesType() {
        return new ProjectReleasesType();
    }

    /**
     * Create an instance of {@link ConversationPost }
     * 
     */
    public ConversationPost createConversationPost() {
        return new ConversationPost();
    }

    /**
     * Create an instance of {@link DomainObject }
     * 
     */
    public DomainObject createDomainObject() {
        return new DomainObject();
    }

    /**
     * Create an instance of {@link DefectDuplicatesType }
     * 
     */
    public DefectDuplicatesType createDefectDuplicatesType() {
        return new DefectDuplicatesType();
    }

    /**
     * Create an instance of {@link OperationResultErrorsType }
     * 
     */
    public OperationResultErrorsType createOperationResultErrorsType() {
        return new OperationResultErrorsType();
    }

    /**
     * Create an instance of {@link UserUserPermissionsType }
     * 
     */
    public UserUserPermissionsType createUserUserPermissionsType() {
        return new UserUserPermissionsType();
    }

    /**
     * Create an instance of {@link Defect }
     * 
     */
    public Defect createDefect() {
        return new Defect();
    }

    /**
     * Create an instance of {@link PreliminaryEstimate }
     * 
     */
    public PreliminaryEstimate createPreliminaryEstimate() {
        return new PreliminaryEstimate();
    }

    /**
     * Create an instance of {@link WebLink }
     * 
     */
    public WebLink createWebLink() {
        return new WebLink();
    }

    /**
     * Create an instance of {@link Task }
     * 
     */
    public Task createTask() {
        return new Task();
    }

    /**
     * Create an instance of {@link ArtifactNotification }
     * 
     */
    public ArtifactNotification createArtifactNotification() {
        return new ArtifactNotification();
    }

    /**
     * Create an instance of {@link DefectTestCasesType }
     * 
     */
    public DefectTestCasesType createDefectTestCasesType() {
        return new DefectTestCasesType();
    }

    /**
     * Create an instance of {@link BuildDefinitionProjectsType }
     * 
     */
    public BuildDefinitionProjectsType createBuildDefinitionProjectsType() {
        return new BuildDefinitionProjectsType();
    }

    /**
     * Create an instance of {@link HierarchicalRequirementPredecessorsType }
     * 
     */
    public HierarchicalRequirementPredecessorsType createHierarchicalRequirementPredecessorsType() {
        return new HierarchicalRequirementPredecessorsType();
    }

    /**
     * Create an instance of {@link WorkspaceProjectsType }
     * 
     */
    public WorkspaceProjectsType createWorkspaceProjectsType() {
        return new WorkspaceProjectsType();
    }

    /**
     * Create an instance of {@link QueryResult }
     * 
     */
    public QueryResult createQueryResult() {
        return new QueryResult();
    }

    /**
     * Create an instance of {@link TestFolder }
     * 
     */
    public TestFolder createTestFolder() {
        return new TestFolder();
    }

    /**
     * Create an instance of {@link OperationResultWarningsType }
     * 
     */
    public OperationResultWarningsType createOperationResultWarningsType() {
        return new OperationResultWarningsType();
    }

    /**
     * Create an instance of {@link WorkspacePermission }
     * 
     */
    public WorkspacePermission createWorkspacePermission() {
        return new WorkspacePermission();
    }

    /**
     * Create an instance of {@link DefectTasksType }
     * 
     */
    public DefectTasksType createDefectTasksType() {
        return new DefectTasksType();
    }

    /**
     * Create an instance of {@link Iteration }
     * 
     */
    public Iteration createIteration() {
        return new Iteration();
    }

    /**
     * Create an instance of {@link SubscriptionWorkspacesType }
     * 
     */
    public SubscriptionWorkspacesType createSubscriptionWorkspacesType() {
        return new SubscriptionWorkspacesType();
    }

    /**
     * Create an instance of {@link ProgramReleasesType }
     * 
     */
    public ProgramReleasesType createProgramReleasesType() {
        return new ProgramReleasesType();
    }

    /**
     * Create an instance of {@link DefectSuiteDefectsType }
     * 
     */
    public DefectSuiteDefectsType createDefectSuiteDefectsType() {
        return new DefectSuiteDefectsType();
    }

    /**
     * Create an instance of {@link DefectSuite }
     * 
     */
    public DefectSuite createDefectSuite() {
        return new DefectSuite();
    }

    /**
     * Create an instance of {@link HierarchicalRequirementSuccessorsType }
     * 
     */
    public HierarchicalRequirementSuccessorsType createHierarchicalRequirementSuccessorsType() {
        return new HierarchicalRequirementSuccessorsType();
    }

    /**
     * Create an instance of {@link ReleaseCumulativeFlowData }
     * 
     */
    public ReleaseCumulativeFlowData createReleaseCumulativeFlowData() {
        return new ReleaseCumulativeFlowData();
    }

    /**
     * Create an instance of {@link PortfolioItem }
     * 
     */
    public PortfolioItem createPortfolioItem() {
        return new PortfolioItem();
    }

    /**
     * Create an instance of {@link TestCaseResult }
     * 
     */
    public TestCaseResult createTestCaseResult() {
        return new TestCaseResult();
    }

    /**
     * Create an instance of {@link PersistableObject }
     * 
     */
    public PersistableObject createPersistableObject() {
        return new PersistableObject();
    }

    /**
     * Create an instance of {@link ProjectTeamMembersType }
     * 
     */
    public ProjectTeamMembersType createProjectTeamMembersType() {
        return new ProjectTeamMembersType();
    }

    /**
     * Create an instance of {@link TestSet }
     * 
     */
    public TestSet createTestSet() {
        return new TestSet();
    }

    /**
     * Create an instance of {@link UserTeamMembershipsType }
     * 
     */
    public UserTeamMembershipsType createUserTeamMembershipsType() {
        return new UserTeamMembershipsType();
    }

    /**
     * Create an instance of {@link CreateResult }
     * 
     */
    public CreateResult createCreateResult() {
        return new CreateResult();
    }

    /**
     * Create an instance of {@link TestSetTasksType }
     * 
     */
    public TestSetTasksType createTestSetTasksType() {
        return new TestSetTasksType();
    }

    /**
     * Create an instance of {@link DefectAttachmentsType }
     * 
     */
    public DefectAttachmentsType createDefectAttachmentsType() {
        return new DefectAttachmentsType();
    }

    /**
     * Create an instance of {@link UserProfile }
     * 
     */
    public UserProfile createUserProfile() {
        return new UserProfile();
    }

    /**
     * Create an instance of {@link PortfolioItemChildrenType }
     * 
     */
    public PortfolioItemChildrenType createPortfolioItemChildrenType() {
        return new PortfolioItemChildrenType();
    }

    /**
     * Create an instance of {@link Preference }
     * 
     */
    public Preference createPreference() {
        return new Preference();
    }

    /**
     * Create an instance of {@link BuildDefinitionBuildsType }
     * 
     */
    public BuildDefinitionBuildsType createBuildDefinitionBuildsType() {
        return new BuildDefinitionBuildsType();
    }

    /**
     * Create an instance of {@link TestCaseAttachmentsType }
     * 
     */
    public TestCaseAttachmentsType createTestCaseAttachmentsType() {
        return new TestCaseAttachmentsType();
    }

    /**
     * Create an instance of {@link ChangesetChangesType }
     * 
     */
    public ChangesetChangesType createChangesetChangesType() {
        return new ChangesetChangesType();
    }

    /**
     * Create an instance of {@link TestCaseResultAttachmentsType }
     * 
     */
    public TestCaseResultAttachmentsType createTestCaseResultAttachmentsType() {
        return new TestCaseResultAttachmentsType();
    }

    /**
     * Create an instance of {@link Workspace }
     * 
     */
    public Workspace createWorkspace() {
        return new Workspace();
    }

    /**
     * Create an instance of {@link DefectSuiteTasksType }
     * 
     */
    public DefectSuiteTasksType createDefectSuiteTasksType() {
        return new DefectSuiteTasksType();
    }

    /**
     * Create an instance of {@link HierarchicalRequirementTestCasesType }
     * 
     */
    public HierarchicalRequirementTestCasesType createHierarchicalRequirementTestCasesType() {
        return new HierarchicalRequirementTestCasesType();
    }

    /**
     * Create an instance of {@link AttributeDefinitionAllowedValuesType }
     * 
     */
    public AttributeDefinitionAllowedValuesType createAttributeDefinitionAllowedValuesType() {
        return new AttributeDefinitionAllowedValuesType();
    }

    /**
     * Create an instance of {@link Build }
     * 
     */
    public Build createBuild() {
        return new Build();
    }

    /**
     * Create an instance of {@link Requirement }
     * 
     */
    public Requirement createRequirement() {
        return new Requirement();
    }

    /**
     * Create an instance of {@link Tag }
     * 
     */
    public Tag createTag() {
        return new Tag();
    }

    /**
     * Create an instance of {@link TestFolderChildrenType }
     * 
     */
    public TestFolderChildrenType createTestFolderChildrenType() {
        return new TestFolderChildrenType();
    }

    /**
     * Create an instance of {@link IterationCumulativeFlowData }
     * 
     */
    public IterationCumulativeFlowData createIterationCumulativeFlowData() {
        return new IterationCumulativeFlowData();
    }

    /**
     * Create an instance of {@link Program }
     * 
     */
    public Program createProgram() {
        return new Program();
    }

    /**
     * Create an instance of {@link TestCaseStepsType }
     * 
     */
    public TestCaseStepsType createTestCaseStepsType() {
        return new TestCaseStepsType();
    }

    /**
     * Create an instance of {@link AttributeDefinitionAllowedQueryOperatorsType }
     * 
     */
    public AttributeDefinitionAllowedQueryOperatorsType createAttributeDefinitionAllowedQueryOperatorsType() {
        return new AttributeDefinitionAllowedQueryOperatorsType();
    }

    /**
     * Create an instance of {@link WebLinkDefinition }
     * 
     */
    public WebLinkDefinition createWebLinkDefinition() {
        return new WebLinkDefinition();
    }

    /**
     * Create an instance of {@link WorkspaceConfiguration }
     * 
     */
    public WorkspaceConfiguration createWorkspaceConfiguration() {
        return new WorkspaceConfiguration();
    }

    /**
     * Create an instance of {@link ArtifactDiscussionType }
     * 
     */
    public ArtifactDiscussionType createArtifactDiscussionType() {
        return new ArtifactDiscussionType();
    }

    /**
     * Create an instance of {@link WorkspaceDomainObject }
     * 
     */
    public WorkspaceDomainObject createWorkspaceDomainObject() {
        return new WorkspaceDomainObject();
    }

    /**
     * Create an instance of {@link Change }
     * 
     */
    public Change createChange() {
        return new Change();
    }

    /**
     * Create an instance of {@link BuildDefinition }
     * 
     */
    public BuildDefinition createBuildDefinition() {
        return new BuildDefinition();
    }

    /**
     * Create an instance of {@link ProjectIterationsType }
     * 
     */
    public ProjectIterationsType createProjectIterationsType() {
        return new ProjectIterationsType();
    }

    /**
     * Create an instance of {@link TypeDefinitionAttributesType }
     * 
     */
    public TypeDefinitionAttributesType createTypeDefinitionAttributesType() {
        return new TypeDefinitionAttributesType();
    }

    /**
     * Create an instance of {@link Release }
     * 
     */
    public Release createRelease() {
        return new Release();
    }

    /**
     * Create an instance of {@link Artifact }
     * 
     */
    public Artifact createArtifact() {
        return new Artifact();
    }

    /**
     * Create an instance of {@link Subscription }
     * 
     */
    public Subscription createSubscription() {
        return new Subscription();
    }

    /**
     * Create an instance of {@link ChangesetArtifactsType }
     * 
     */
    public ChangesetArtifactsType createChangesetArtifactsType() {
        return new ChangesetArtifactsType();
    }

    /**
     * Create an instance of {@link ProjectChildrenType }
     * 
     */
    public ProjectChildrenType createProjectChildrenType() {
        return new ProjectChildrenType();
    }

    /**
     * Create an instance of {@link TestCase }
     * 
     */
    public TestCase createTestCase() {
        return new TestCase();
    }

    /**
     * Create an instance of {@link TimeEntryItem }
     * 
     */
    public TimeEntryItem createTimeEntryItem() {
        return new TimeEntryItem();
    }

    /**
     * Create an instance of {@link UserPermission }
     * 
     */
    public UserPermission createUserPermission() {
        return new UserPermission();
    }

    /**
     * Create an instance of {@link SCMRepository }
     * 
     */
    public SCMRepository createSCMRepository() {
        return new SCMRepository();
    }

    /**
     * Create an instance of {@link IterationUserIterationCapacitiesType }
     * 
     */
    public IterationUserIterationCapacitiesType createIterationUserIterationCapacitiesType() {
        return new IterationUserIterationCapacitiesType();
    }

    /**
     * Create an instance of {@link WorkspaceTypeDefinitionsType }
     * 
     */
    public WorkspaceTypeDefinitionsType createWorkspaceTypeDefinitionsType() {
        return new WorkspaceTypeDefinitionsType();
    }

    /**
     * Create an instance of {@link Type }
     * 
     */
    public Type createType() {
        return new Type();
    }

    /**
     * Create an instance of {@link ProjectPermission }
     * 
     */
    public ProjectPermission createProjectPermission() {
        return new ProjectPermission();
    }

    /**
     * Create an instance of {@link TypeDefinition }
     * 
     */
    public TypeDefinition createTypeDefinition() {
        return new TypeDefinition();
    }

    /**
     * Create an instance of {@link ArtifactChangesetsType }
     * 
     */
    public ArtifactChangesetsType createArtifactChangesetsType() {
        return new ArtifactChangesetsType();
    }

    /**
     * Create an instance of {@link Changeset }
     * 
     */
    public Changeset createChangeset() {
        return new Changeset();
    }

    /**
     * Create an instance of {@link AllowedAttributeValue }
     * 
     */
    public AllowedAttributeValue createAllowedAttributeValue() {
        return new AllowedAttributeValue();
    }

    /**
     * Create an instance of {@link CumulativeFlowData }
     * 
     */
    public CumulativeFlowData createCumulativeFlowData() {
        return new CumulativeFlowData();
    }

    /**
     * Create an instance of {@link DefectSuiteAttachmentsType }
     * 
     */
    public DefectSuiteAttachmentsType createDefectSuiteAttachmentsType() {
        return new DefectSuiteAttachmentsType();
    }

    /**
     * Create an instance of {@link AllowedQueryOperator }
     * 
     */
    public AllowedQueryOperator createAllowedQueryOperator() {
        return new AllowedQueryOperator();
    }

    /**
     * Create an instance of {@link OperationResult }
     * 
     */
    public OperationResult createOperationResult() {
        return new OperationResult();
    }

    /**
     * Create an instance of {@link BuildChangesetsType }
     * 
     */
    public BuildChangesetsType createBuildChangesetsType() {
        return new BuildChangesetsType();
    }

    /**
     * Create an instance of {@link BuildMetricDefinition }
     * 
     */
    public BuildMetricDefinition createBuildMetricDefinition() {
        return new BuildMetricDefinition();
    }

    /**
     * Create an instance of {@link HierarchicalRequirement }
     * 
     */
    public HierarchicalRequirement createHierarchicalRequirement() {
        return new HierarchicalRequirement();
    }

    /**
     * Create an instance of {@link RequirementAttachmentsType }
     * 
     */
    public RequirementAttachmentsType createRequirementAttachmentsType() {
        return new RequirementAttachmentsType();
    }

    /**
     * Create an instance of {@link Revision }
     * 
     */
    public Revision createRevision() {
        return new Revision();
    }

    /**
     * Create an instance of {@link PortfolioItemUserStoriesType }
     * 
     */
    public PortfolioItemUserStoriesType createPortfolioItemUserStoriesType() {
        return new PortfolioItemUserStoriesType();
    }

    /**
     * Create an instance of {@link HierarchicalRequirementChildrenType }
     * 
     */
    public HierarchicalRequirementChildrenType createHierarchicalRequirementChildrenType() {
        return new HierarchicalRequirementChildrenType();
    }

    /**
     * Create an instance of {@link ArtifactTagsType }
     * 
     */
    public ArtifactTagsType createArtifactTagsType() {
        return new ArtifactTagsType();
    }

    /**
     * Create an instance of {@link HierarchicalRequirementTasksType }
     * 
     */
    public HierarchicalRequirementTasksType createHierarchicalRequirementTasksType() {
        return new HierarchicalRequirementTasksType();
    }

    /**
     * Create an instance of {@link TimeEntryValue }
     * 
     */
    public TimeEntryValue createTimeEntryValue() {
        return new TimeEntryValue();
    }

    /**
     * Create an instance of {@link RevisionHistoryRevisionsType }
     * 
     */
    public RevisionHistoryRevisionsType createRevisionHistoryRevisionsType() {
        return new RevisionHistoryRevisionsType();
    }

    /**
     * Create an instance of {@link ChangesetBuildsType }
     * 
     */
    public ChangesetBuildsType createChangesetBuildsType() {
        return new ChangesetBuildsType();
    }

    /**
     * Create an instance of {@link WSObject }
     * 
     */
    public WSObject createWSObject() {
        return new WSObject();
    }

    /**
     * Create an instance of {@link UserIterationCapacity }
     * 
     */
    public UserIterationCapacity createUserIterationCapacity() {
        return new UserIterationCapacity();
    }

    /**
     * Create an instance of {@link HierarchicalRequirementDefectsType }
     * 
     */
    public HierarchicalRequirementDefectsType createHierarchicalRequirementDefectsType() {
        return new HierarchicalRequirementDefectsType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RallyIntegrationInfoType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://rallydev.com/webservice/v1_34/domain", name = "RallyIntegrationInfo")
    public JAXBElement<RallyIntegrationInfoType> createRallyIntegrationInfo(RallyIntegrationInfoType value) {
        return new JAXBElement<RallyIntegrationInfoType>(_RallyIntegrationInfo_QNAME, RallyIntegrationInfoType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Estimate", scope = Task.class)
    public JAXBElement<Double> createTaskEstimate(Double value) {
        return new JAXBElement<Double>(_TaskEstimate_QNAME, Double.class, Task.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ToDo", scope = Task.class)
    public JAXBElement<Double> createTaskToDo(Double value) {
        return new JAXBElement<Double>(_TaskToDo_QNAME, Double.class, Task.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigDecimal }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Rank", scope = Task.class)
    public JAXBElement<BigDecimal> createTaskRank(BigDecimal value) {
        return new JAXBElement<BigDecimal>(_TaskRank_QNAME, BigDecimal.class, Task.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Iteration }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Iteration", scope = Task.class)
    public JAXBElement<Iteration> createTaskIteration(Iteration value) {
        return new JAXBElement<Iteration>(_TaskIteration_QNAME, Iteration.class, Task.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Recycled", scope = Task.class)
    public JAXBElement<Boolean> createTaskRecycled(Boolean value) {
        return new JAXBElement<Boolean>(_TaskRecycled_QNAME, Boolean.class, Task.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Blocked", scope = Task.class)
    public JAXBElement<Boolean> createTaskBlocked(Boolean value) {
        return new JAXBElement<Boolean>(_TaskBlocked_QNAME, Boolean.class, Task.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TaskAttachmentsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Attachments", scope = Task.class)
    public JAXBElement<TaskAttachmentsType> createTaskAttachments(TaskAttachmentsType value) {
        return new JAXBElement<TaskAttachmentsType>(_TaskAttachments_QNAME, TaskAttachmentsType.class, Task.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Actuals", scope = Task.class)
    public JAXBElement<Double> createTaskActuals(Double value) {
        return new JAXBElement<Double>(_TaskActuals_QNAME, Double.class, Task.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Long }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TaskIndex", scope = Task.class)
    public JAXBElement<Long> createTaskTaskIndex(Long value) {
        return new JAXBElement<Long>(_TaskTaskIndex_QNAME, Long.class, Task.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Release }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Release", scope = Task.class)
    public JAXBElement<Release> createTaskRelease(Release value) {
        return new JAXBElement<Release>(_TaskRelease_QNAME, Release.class, Task.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "State", scope = Task.class)
    public JAXBElement<String> createTaskState(String value) {
        return new JAXBElement<String>(_TaskState_QNAME, String.class, Task.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Project }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Project", scope = Task.class)
    public JAXBElement<Project> createTaskProject(Project value) {
        return new JAXBElement<Project>(_TaskProject_QNAME, Project.class, Task.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Artifact }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "WorkProduct", scope = Task.class)
    public JAXBElement<Artifact> createTaskWorkProduct(Artifact value) {
        return new JAXBElement<Artifact>(_TaskWorkProduct_QNAME, Artifact.class, Task.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TestFolder }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TestFolder", scope = TestCase.class)
    public JAXBElement<TestFolder> createTestCaseTestFolder(TestFolder value) {
        return new JAXBElement<TestFolder>(_TestCaseTestFolder_QNAME, TestFolder.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PostConditions", scope = TestCase.class)
    public JAXBElement<String> createTestCasePostConditions(String value) {
        return new JAXBElement<String>(_TestCasePostConditions_QNAME, String.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TestCaseActual", scope = TestCase.class)
    public JAXBElement<Double> createTestCaseTestCaseActual(Double value) {
        return new JAXBElement<Double>(_TestCaseTestCaseActual_QNAME, Double.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Method", scope = TestCase.class)
    public JAXBElement<String> createTestCaseMethod(String value) {
        return new JAXBElement<String>(_TestCaseMethod_QNAME, String.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Type", scope = TestCase.class)
    public JAXBElement<String> createTestCaseType(String value) {
        return new JAXBElement<String>(_TestCaseType_QNAME, String.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ValidationInput", scope = TestCase.class)
    public JAXBElement<String> createTestCaseValidationInput(String value) {
        return new JAXBElement<String>(_TestCaseValidationInput_QNAME, String.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LastBuild", scope = TestCase.class)
    public JAXBElement<String> createTestCaseLastBuild(String value) {
        return new JAXBElement<String>(_TestCaseLastBuild_QNAME, String.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XMLGregorianCalendar }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LastRun", scope = TestCase.class)
    public JAXBElement<XMLGregorianCalendar> createTestCaseLastRun(XMLGregorianCalendar value) {
        return new JAXBElement<XMLGregorianCalendar>(_TestCaseLastRun_QNAME, XMLGregorianCalendar.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LastVerdict", scope = TestCase.class)
    public JAXBElement<String> createTestCaseLastVerdict(String value) {
        return new JAXBElement<String>(_TestCaseLastVerdict_QNAME, String.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Issue", scope = TestCase.class)
    public JAXBElement<String> createTestCaseIssue(String value) {
        return new JAXBElement<String>(_TestCaseIssue_QNAME, String.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PreConditions", scope = TestCase.class)
    public JAXBElement<String> createTestCasePreConditions(String value) {
        return new JAXBElement<String>(_TestCasePreConditions_QNAME, String.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TestCaseStepsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Steps", scope = TestCase.class)
    public JAXBElement<TestCaseStepsType> createTestCaseSteps(TestCaseStepsType value) {
        return new JAXBElement<TestCaseStepsType>(_TestCaseSteps_QNAME, TestCaseStepsType.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Package", scope = TestCase.class)
    public JAXBElement<String> createTestCasePackage(String value) {
        return new JAXBElement<String>(_TestCasePackage_QNAME, String.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TestCaseToDo", scope = TestCase.class)
    public JAXBElement<Double> createTestCaseTestCaseToDo(Double value) {
        return new JAXBElement<Double>(_TestCaseTestCaseToDo_QNAME, Double.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ValidationExpectedResult", scope = TestCase.class)
    public JAXBElement<String> createTestCaseValidationExpectedResult(String value) {
        return new JAXBElement<String>(_TestCaseValidationExpectedResult_QNAME, String.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "StepName", scope = TestCase.class)
    public JAXBElement<String> createTestCaseStepName(String value) {
        return new JAXBElement<String>(_TestCaseStepName_QNAME, String.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Recycled", scope = TestCase.class)
    public JAXBElement<Boolean> createTestCaseRecycled(Boolean value) {
        return new JAXBElement<Boolean>(_TaskRecycled_QNAME, Boolean.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TestCaseAttachmentsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Attachments", scope = TestCase.class)
    public JAXBElement<TestCaseAttachmentsType> createTestCaseAttachments(TestCaseAttachmentsType value) {
        return new JAXBElement<TestCaseAttachmentsType>(_TaskAttachments_QNAME, TestCaseAttachmentsType.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Priority", scope = TestCase.class)
    public JAXBElement<String> createTestCasePriority(String value) {
        return new JAXBElement<String>(_TestCasePriority_QNAME, String.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "DefectStatus", scope = TestCase.class)
    public JAXBElement<String> createTestCaseDefectStatus(String value) {
        return new JAXBElement<String>(_TestCaseDefectStatus_QNAME, String.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Risk", scope = TestCase.class)
    public JAXBElement<String> createTestCaseRisk(String value) {
        return new JAXBElement<String>(_TestCaseRisk_QNAME, String.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "AutomatedScriptLocation", scope = TestCase.class)
    public JAXBElement<String> createTestCaseAutomatedScriptLocation(String value) {
        return new JAXBElement<String>(_TestCaseAutomatedScriptLocation_QNAME, String.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TestCaseResultsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Results", scope = TestCase.class)
    public JAXBElement<TestCaseResultsType> createTestCaseResults(TestCaseResultsType value) {
        return new JAXBElement<TestCaseResultsType>(_TestCaseResults_QNAME, TestCaseResultsType.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Objective", scope = TestCase.class)
    public JAXBElement<String> createTestCaseObjective(String value) {
        return new JAXBElement<String>(_TestCaseObjective_QNAME, String.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Artifact }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "WorkProduct", scope = TestCase.class)
    public JAXBElement<Artifact> createTestCaseWorkProduct(Artifact value) {
        return new JAXBElement<Artifact>(_TaskWorkProduct_QNAME, Artifact.class, TestCase.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TestCaseEstimate", scope = TestCase.class)
    public JAXBElement<Double> createTestCaseTestCaseEstimate(Double value) {
        return new JAXBElement<Double>(_TestCaseTestCaseEstimate_QNAME, Double.class, TestCase.class, value);
    }

}
